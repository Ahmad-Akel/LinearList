package gui;

import java.util.function.Consumer;
import java.util.function.Supplier;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.stage.Modality;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import prostredky.Dodavka;

/**
 *
 * @author Obadah Al Hariri
 */
public class DialogDodavka extends Stage {
    
    private Dodavka dodavka; // DopravniProstredek
    private boolean edit;
    private Consumer<Dodavka> outputOperation;
    
    private TextField spzTextField;
    private TextField hmotnostTextField;
    private TextField tachometrTextField;
    
    public static DialogDodavka factoryDialogOsobniAutomobil(Supplier<Dodavka> input, Consumer<Dodavka> output) {
        return new DialogDodavka(input, output);
    }
    
    private DialogDodavka(Supplier<Dodavka> input, Consumer<Dodavka> output) {
        // input
        edit = input != null;
        dodavka = (edit) ? input.get() : new Dodavka();

        // output
        outputOperation = output;

        // general
        setTitle("Dialog Dodavka");
        setWidth(350);
        setHeight(400);
        initStyle(StageStyle.UTILITY);
        initModality(Modality.WINDOW_MODAL);
        setScene(createScene());

        // input
        if (edit) {
            set();
        }
    }
    
    private Scene createScene() {
        VBox root = new VBox();
        root.setAlignment(Pos.CENTER);
        root.setSpacing(20);
        
        GridPane gridPane = new GridPane();
        gridPane.setAlignment(Pos.CENTER);
        gridPane.setPadding(new Insets(10));
        gridPane.setHgap(10);
        gridPane.setVgap(10);
        
        int row = 0;
        
        spzTextField = addRowTextField(gridPane, "SPZ", row++);
        hmotnostTextField = addRowTextField(gridPane, "Hmotnost", row++);
        tachometrTextField = addRowTextField(gridPane, "Tachmetr", row++);
        
        Button ulozButton = new Button("Ulož");
        ulozButton.setOnAction(e -> {
            update();
            outputOperation.accept(dodavka);
            close();
        });
        gridPane.add(ulozButton, 1, ++row);
        
        root.getChildren().addAll(gridPane);
        
        Scene scene = new Scene(root);
        return scene;
    }
    
    private static TextField addRowTextField(GridPane gridPane, String labelName, int row) {
        gridPane.add(new Label(labelName), 0, row);
        TextField textField = new TextField();
        gridPane.add(textField, 1, row);
        return textField;
    }
    
    private void update() {
        try {
            dodavka.setSpz(spzTextField.getText());
            dodavka.setHmotnost(Double.valueOf(hmotnostTextField.getText()));
            dodavka.setTachometr(Double.valueOf(tachometrTextField.getText()));
        } catch (NumberFormatException e) {
            new Alert(Alert.AlertType.ERROR, "Něco je prázdné").showAndWait();
        }
    }
    
    private void set() {
        spzTextField.setText(dodavka.getSpz());
        hmotnostTextField.setText(String.valueOf(dodavka.getHmotnost()));
        tachometrTextField.setText(String.valueOf(dodavka.getTachometr()));
    }
}
